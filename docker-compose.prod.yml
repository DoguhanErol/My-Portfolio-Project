services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    container_name: backend_prod
    ports:
      - "8001:8001"
    env_file:
      - ./backend/.env
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network
    environment:
      - PYTHONUNBUFFERED=1
      - DEBUG=0
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media

  nginx:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    container_name: nginx_prod
    ports:
      - "80:80"
    volumes:
      - static_volume:/app/staticfiles:ro
      - media_volume:/app/media:ro
    depends_on:
      - backend
    networks:
      - app-network

  db:
    image: mysql:8.0  
    container_name: mysql_db_prod
    restart: always
    env_file:
    - ./backend/.env
    environment:
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    volumes:
      - mysql_data_prod:/var/lib/mysql 
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u${DB_USER}", "-p${DB_PASSWORD}"]
      interval: 5s
      timeout: 10s
      retries: 5
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  mysql_data_prod:
  static_volume:
  media_volume: